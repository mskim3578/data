

def lot_fail_one_timestamp(lot, spro):
    global temp, timestamplist
    lot_df=df_data[df_data['lotid']==lot]
    timestamplist=lot_df['timestamp'].unique()
    for timestamp in timestamplist:         
            groups = lot_df[lot_df['timestamp']==timestamp].groupby('Fail Item')               
            temp=lot_df[lot_df['timestamp']==timestamp]
            temp2=temp[temp['Fail Item']=="'"]
            pro=len(temp2)/len(temp)*100
            plt.figure()
            for name, group in groups:
                   namelabel = name+"="+str(len(group))       
                   color=colors[fail_item.index(name)]
                   # print(namelabel, len(group), color)
                   if name=="'":
                    plt.scatter(group.col, group.row, label=namelabel,  color="lightcyan",
                                   s=30, marker='s')
                   else :
                    plt.scatter(group.col, group.row, label=namelabel,  
                                color=color,s=30, marker='s')       
            plt.xticks(range(-8, 12))
            if pro <= spro:
                plt.title( f"{lot}[{timestamp}] :{pro:.2f}% 불량", color='red')
            else:
                plt.title( f"{lot}[{timestamp}] :{pro:.2f}%  우량")
            plt.axhline(0, color='black', linestyle='--', linewidth=0.5)
            plt.axvline(0, color='black', linestyle='--', linewidth=0.5)
            plt.legend(fontsize=7)
            # plt.axis("off")
            plt.show()        
      



lot_fail_one_timestamp('1340040', 97)



col3 = [' Test No.', ' Coordinate', ' Soft Bin', ' Hard Bin', ' Time[s]', ' Result', ' Fail Item'] 


cmap=plt.get_cmap('tab20')
colors = [cmap(i) for i in range(cmap.N)]
